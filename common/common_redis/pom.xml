<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>top.cjf_rb</groupId>
        <artifactId>common</artifactId>
        <version>1.0.0-SNAPSHOT</version>
    </parent>
    <artifactId>common_redis</artifactId>
    <version>1.0.0-SNAPSHOT</version>

    <description>
        Redis 缓存配置
        RedisTemplate 的 key/value 序列化策略设置（使用 GenericJackson2JsonRedisSerializer）
        支持 Spring Cache 的缓存配置（TTL、key前缀、null值缓存控制等）
        Redisson 分布式锁配置
        支持单机、哨兵、集群模式的 Redisson 客户端构建
        提供 RedissonClient, RedissonReactiveClient, RedissonRxClient
    </description>

    <properties>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>


        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>
        <!-- Redis -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis</artifactId>
        </dependency>
        <dependency>
            <groupId>org.redisson</groupId>
            <artifactId>redisson-spring-data-32</artifactId>
        </dependency>

        <dependency>
            <groupId>top.cjf_rb</groupId>
            <artifactId>common_core</artifactId>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <phase>package</phase> <!-- 确保 phase 为 package -->
                        <goals>
                            <goal>jar-no-fork</goal> <!-- 确保 goal 为 jar -->
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>