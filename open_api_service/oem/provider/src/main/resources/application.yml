# 服务端口配置
server:
  port: 8098

spring:
  # 应用名称
  application:
    name: provider

  # 指定当前激活的 Spring Profile，默认为 local
  profiles:
    active: ${PROFILES_ACTIVE:local}

  # 数据库配置
  datasource:
    dynamic:
      primary: master   # 设置默认数据源
      datasource:
        master:
          url: jdbc:mysql://${DB_HOST:192.168.33.33}:${DB_PORT:3306}/master_db?useSSL=true&allowPublicKeyRetrieval=true
          username: ${DB_USERNAME}
          password: ${DB_PASSWORD}
          driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      # 最大连接池数量（根据数据库负载调整）
      maximum-pool-size: 10
      # 最小空闲连接数（保持一定数量的空闲连接，减少频繁创建销毁开销）
      minimum-idle: 5
      # 空闲连接超时时间（毫秒），超过该时间未使用的连接将被回收
      idle-timeout: 30000
      # 连接最大存活时间（毫秒），防止连接老化（建议略小于数据库 wait_timeout）
      max-lifetime: 1800000
      # 获取连接的最大等待时间（毫秒），用于控制数据库压力过大时的阻塞行为
      connection-timeout: 30000
      # 自定义连接池名称，方便在监控或日志中识别
      pool-name: MyHikariPool
      # 是否自动提交事务，默认 true，可根据业务需求设置为 false
      auto-commit: true
      # 验证连接是否有效的超时时间（毫秒），确保获取到的是可用连接
      validation-timeout: 5000
      # 连接泄漏检测阈值（毫秒），如果连接未在指定时间内释放，会记录警告日志
      leak-detection-threshold: 30000

  # Nacos 服务发现配置
  cloud:
    nacos:
      discovery:
        # Nacos Server 地址
        server-addr: 192.168.33.33
        namespace: ${NACOS_NAMESPACE:public}
        port: 8848
        username: ${NACOS_USERNAME:admin}
        password: ${NACOS_PASSWORD:admin}

dubbo:
  # Dubbo 注册中心配置
  registry:
    # 使用 Nacos 作为注册中心
    address: nacos://${NACOS_ADDR:192.168.33.33}
    port: 8848
    # 账号
    username: ${NACOS_USERNAME:admin}
    password: ${NACOS_PASSWORD:admin}
    # 配置 Nacos 注册中心参数
    parameters:
      # 设置服务注册模式为应用级（instance）而非接口级（service）
      register-mode: instance
    use-as-config-center: false
  consumer:
    check: false
  # Dubbo 协议及端口配置
  protocol:
    name: dubbo  # 使用 Dubbo 协议
    port: 20880  # Dubbo 服务监听端口

  #  # 使用 Dubbo 3.x 推荐的元数据服务配置方式
  metadata-report:
    # 元数据服务地址（Nacos）
    address: nacos://${NACOS_ADDR:192.168.33.33}
    port: 8848
    username: admin
    password: admin

logging:
  level:
    org.apache.dubbo.registry.configured: debug
    org.apache.dubbo.common.config.Environment: debug

app:
  exception:
    handler:
      type: "basic"

